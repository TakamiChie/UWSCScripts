PUBLIC reg = CREATEOLEOBJ("VBScript.RegExp")
PUBLIC fso = CREATEOLEOBJ("Scripting.FileSystemObject")
PUBLIC m = NULL

COM_ERR_IGN
DIM word = GETACTIVEOLEOBJ( "Word.Application")
DIM files[0]
DIM doc_count = GETOLEITEM( word.documents )
COM_ERR_RET
IFB doc_count <= 0 OR COM_ERR_FLG THEN
  MSGBOX("ふらっとステーション・とつか わくわくだより ファイルを開いてください")
  EXIT
ENDIF
GETTIME()
RESIZE(files, doc_count)
FOR i = 0 TO doc_count - 1
  files[i] = ALL_OLE_ITEM[i].name
NEXT
// ドキュメントファイルを選択
DIM file = SLCTBOX(SLCT_CMB + SLCT_STR, 0, "ファイルを選択", files)

IF file = "-1" THEN EXITEXIT

// ドキュメントファイルを開く
DIM doc = word.documents(file)

DIM fid = FOPEN(fso.buildPath(GET_CUR_DIR, "import.csv"), F_WRITE)
DIM row = 1
FPUT(fid, "Start Date", row, 1)
FPUT(fid, "Start Time", row, 2)
FPUT(fid, "End Date", row, 3)
FPUT(fid, "End Time", row, 4)
FPUT(fid, "Subject", row, 5)
FPUT(fid, "Location", row, 6)
FPUT(fid, "Description", row, 7)

// テーブル走査
FOR i = 0 TO GETOLEITEM( doc.tables ) - 1
  DIM table = ALL_OLE_ITEM[i]
  FOR l = 1 TO table.rows.count
    DIM datetime = table.rows[l].cells[1].range.text
    DIM date[0]
    DIM starttime
    DIM endtime
    DIM content
    DIM note
    DIM title
    DIM plan = FALSE
    IF match(datetime, "日.*時") OR table.rows[l].cells.count < 3 THEN CONTINUE
    // 日付時刻文字列の整理(全角→半角、曜日の記載削除)
    datetime = STRCONV( datetime, SC_HALFWIDTH)
    datetime = regreplace( datetime, "", "\([土日月火水木金]\)")

    content = table.rows[l].cells[2].range.text
    note = table.rows[l].cells[3].range.text
    PRINT "datetime:<#CR>" + datetime
    PRINT "content:<#CR>" + content
    PRINT "note:<#CR>" + note
    
    // 日付をマッチ
    IFB match(datetime, "(\d+)/([\d､]+)") THEN 
      DIM month = m.item[0].subMatches[0]
      DIM days = SPLIT(m.item[0].subMatches[1], "､")
      RESIZE(date, RESIZE(days))
      FOR d = 0 TO RESIZE(days)
        date[d] = G_TIME_YY4 + "/" + month + "/" + days[d]
        PRINT date[d]
      NEXT
    ELSE 
      // マッチしなければ無効行
      CONTINUE
    ENDIF
    
    // 時刻をマッチ
    IFB match(datetime, "(\d{1,2}:\d{2})~(\d{1,2}:\d{2})") THEN
      starttime = m.item[0].subMatches[0]
      endtime = m.item[0].subMatches[1]
    ELSE
      // マッチしなければ無効行
      CONTINUE
    ENDIF

    // 表題をマッチ
    IFB match(content, "(.*?)(講師|対象|内容|共催)") THEN
      title = TRIM(m.item[0].subMatches[0])
      content = TRIM(COPY(content, LENGTH(title) + 1))
      PRINT "タイトル:" + title
    ELSE
      // マッチしなければ無効行
      CONTINUE
    ENDIF

    content = regreplace(content, "", "(、|\n)?\s*問合せ・申込み.*")
    // 詳細未定フラグチェック
    IF POS("詳細は後日", datetime) > 0 OR POS("詳細は後日", content) > 0 OR POS("詳細は後日", note) > 0 THEN plan = TRUE
    // 文字コードなど調整
    content = REPLACE(content, CHR(7), "")
    content = REPLACE(content, "№", "No.")
    content = REPLACE(content, "①", "( 1 )")
    content = REPLACE(content, "②", "( 2 )")
    content = REPLACE(content, "③", "( 3 )")
    content = REPLACE(content, "④", "( 4 )")
    content = REPLACE(content, "⑤", "( 5 )")
    content = REPLACE(content, "⑥", "( 6 )")
    content = REPLACE(content, "⑦", "( 7 )")
    content = REPLACE(content, "⑧", "( 8 )")
    content = REPLACE(content, "⑨", "( 9 )")
    note = REPLACE(note, CHR(7), "")
    
    PRINT "----<#CR>" + content + "<#CR>"
    
    // 出力
    FOR d = 0 TO RESIZE(date)
      row = row + 1

      IF plan THEN title = "詳細未定:" + title
      FPUT(fid, date[d], row, 1)
      FPUT(fid, starttime, row, 2)
      FPUT(fid, date[d], row, 3)
      FPUT(fid, endtime, row, 4)
      FPUT(fid, "<#DBL>" + title + "<#DBL>", row, 5)
      FPUT(fid, "ふらっとステーション・とつか", row, 6)
      FPUT(fid, "<#DBL>" + content + "<#CR>" + note + "<#DBL>", row, 7)
    NEXT
  NEXT
NEXT

FCLOSE(fid)
MSGBOX("インポート用CSVファイルがスクリプトファイルのあるフォルダに作成されました。<#CR>Googleカレンダーのインポート機能よりインポートしてください")

FUNCTION match(str, pattern, ignoreCase=true,global=true)
   reg.IgnoreCase = ignoreCase
   reg.Global = global
   reg.Pattern = pattern
   m = reg.execute(str)
   RESULT = (m.count > 0)
FEND

FUNCTION regreplace(str, replacement, pattern, ignoreCase=true,global=true)
   reg.IgnoreCase = ignoreCase
   reg.Global = global
   reg.Pattern = pattern
   RESULT = reg.replace(str, replacement)
FEND

